/*
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/
'use strict';

// original: https://gist.github.com/piroor/14e42c7eeb876ab71e3202dabcd0ee9e#file-toc-js

function generate() {
  var container = document.querySelector('.markdown-body');
  var isEditPage = /\/_edit$/.test(location.href.split('#')[0].split('?')[0]);
  if (isEditPage) {
    let tab = document.querySelector('.preview-tab');
    tab.click();
    setTimeout(function waitPreview(retryCount) {
      container = document.querySelector('.preview-content .markdown-body');
      if (!container || (retryCount < 10 && !generateToC()))
        setTimeout(waitPreview, 250, retryCount + 1);
    }, 250, 0);
  }
  else {
    generateToC();
  }
  function generateToC() {
    var headings = container.querySelectorAll('h1, h2, h3, h4, h5, h6');
    if (headings.length == 0)
      return false;
    var minLevel = 6;
    for (let heading of headings) {
      let headingLevel = parseInt(heading.localName.charAt(1));
      if (headingLevel < minLevel)
        minLevel = headingLevel;
    }
    var toc = [];
    for (let heading of headings) {
      let anchor = heading.querySelector('a[href]');
      let href = anchor.getAttribute('href');
      let indent = '';
      let headingLevel = parseInt(heading.localName.charAt(1));
      for (let level = headingLevel - minLevel; level > 0; level--) {
        indent += '  ';
      }
      toc.push(`${indent}* [${heading.textContent.trim().replace(/\s\s+/g, ' ')}](${href})`);
    }
    var source = `<!--ToC-->
${toc.join('\n')}
 
<small>(generated by [Table of Contents Generator for GitHub Wiki](https://github.com/clear-code/github-wiki-toc-generator))</small>
<!--/ToC-->`;
    if (isEditPage) {
      let tab = document.querySelector('.write-tab');
      tab.click();
      setTimeout(function updateToC(retryCount) {
        var field = document.querySelector('#gollum-editor-body');
        if (retryCount < 10 && !field.value)
          return setTimeout(updateToC, 250, retryCount);

        var matcher = /<!--ToC-->\n(.*\n)*<!--\/ToC-->/;
        if (matcher.test(field.value))
          field.value = field.value.replace(matcher, source);
        else
          field.value = `${source}
${field.value}`;
      }, 250, 0);
    }
    else {
      let button = document.createElement('button');
      button.textContent = 'Copy ToC';
      button.setAttribute('style', 'position: fixed; left: 45%; right: 45%; top: 45%;');
      button.onclick = function() {
        var textarea = document.createElement('textarea');
        document.body.appendChild(textarea);
        textarea.setAttribute('style', 'position: fixed; top: 0; left: 0;');
        textarea.value = source;
        textarea.focus();
        textarea.select();
        document.execCommand('copy');
        document.body.removeChild(textarea);
        document.body.removeChild(button);
        location.href += '/_edit';
      };
      document.body.appendChild(button);
    }
    return true;
  }
}

browser.browserAction.onClicked.addListener(aTab => {
  browser.tabs.executeScript(aTab.id, {
    code: `(${generate.toString()})()`
  });
});
